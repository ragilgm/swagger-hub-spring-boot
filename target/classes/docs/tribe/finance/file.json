{
  "swagger": "2.0",
  "info": {
    "title": "MNA API",
    "description": "My Network Activity API Documenation",
    "contact": {
      "email": "checkoutandnotifications@spscommerce.com"
    },
    "version": "v1"
  },
  "host": "api.mna.dev.spsapps.net",
  "schemes": [
    "https"
  ],
  "basePath": "/",
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "Basic": {
      "type": "basic"
    }
  },
  "security": [
    {
      "Basic": []
    }
  ],
  "paths": {
    "/mna/events/v1/aggregate-stats/": {
      "get": {
        "operationId": "mna_events_v1_aggregate-stats_list",
        "description": "",
        "parameters": [
          {
            "name": "event_type_id",
            "in": "query",
            "description": "Multiple values may be separated by commas.",
            "required": false,
            "type": "string"
          },
          {
            "name": "application_id",
            "in": "query",
            "description": "Multiple values may be separated by commas.",
            "required": false,
            "type": "string"
          },
          {
            "name": "to_email_address",
            "in": "query",
            "description": "Multiple values may be separated by commas.",
            "required": false,
            "type": "string"
          },
          {
            "name": "to_user_id",
            "in": "query",
            "description": "Multiple values may be separated by commas.",
            "required": false,
            "type": "string"
          },
          {
            "name": "from_email_address",
            "in": "query",
            "description": "Multiple values may be separated by commas.",
            "required": false,
            "type": "string"
          },
          {
            "name": "notification_type",
            "in": "query",
            "description": "Multiple values may be separated by commas.",
            "required": false,
            "type": "string"
          },
          {
            "name": "opt_out",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "sent_before",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "sent_after",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "notification_count__gte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "number"
          },
          {
            "name": "notification_count__lte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "number"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "The pagination cursor value.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "results"
              ],
              "type": "object",
              "properties": {
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AggregateStats"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "mna"
        ]
      },
      "parameters": []
    },
    "/mna/events/v1/aggregation-rules/": {
      "get": {
        "operationId": "mna_events_v1_aggregation-rules_list",
        "description": "",
        "parameters": [
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AggregationRule"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "mna"
        ]
      },
      "post": {
        "operationId": "mna_events_v1_aggregation-rules_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AggregationRule"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AggregationRule"
            }
          }
        },
        "tags": [
          "mna"
        ]
      },
      "parameters": []
    },
    "/mna/events/v1/aggregation-rules/{id}/": {
      "get": {
        "operationId": "mna_events_v1_aggregation-rules_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AggregationRule"
            }
          }
        },
        "tags": [
          "mna"
        ]
      },
      "patch": {
        "operationId": "mna_events_v1_aggregation-rules_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AggregationRule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AggregationRule"
            }
          }
        },
        "tags": [
          "mna"
        ]
      },
      "delete": {
        "operationId": "mna_events_v1_aggregation-rules_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "mna"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this aggregation rule.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/mna/events/v1/audience-events/": {
      "get": {
        "operationId": "mna_events_v1_audience-events_list",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Multiple values may be separated by commas.",
            "required": false,
            "type": "string"
          },
          {
            "name": "email_template",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "web_template",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "event_type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "created_before",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "created_after",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "template_vars_contains",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AudienceEvent"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "mna"
        ]
      },
      "post": {
        "operationId": "mna_events_v1_audience-events_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AudienceEvent"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AudienceEvent"
            }
          }
        },
        "tags": [
          "mna"
        ]
      },
      "parameters": []
    },
    "/mna/events/v1/audience-events/{id}/": {
      "get": {
        "operationId": "mna_events_v1_audience-events_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AudienceEvent"
            }
          }
        },
        "tags": [
          "mna"
        ]
      },
      "put": {
        "operationId": "mna_events_v1_audience-events_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AudienceEvent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AudienceEvent"
            }
          }
        },
        "tags": [
          "mna"
        ]
      },
      "delete": {
        "operationId": "mna_events_v1_audience-events_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "mna"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A UUID string identifying this audience event.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/mna/events/v1/audience-events/{id}/preview-email/": {
      "get": {
        "operationId": "mna_events_v1_audience-events_preview_email",
        "description": "",
        "parameters": [
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AudienceEventPreview"
              }
            }
          }
        },
        "tags": [
          "mna"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A UUID string identifying this audience event.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/mna/events/v1/audience-events/{id}/preview-web/": {
      "get": {
        "operationId": "mna_events_v1_audience-events_preview_web",
        "description": "",
        "parameters": [
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AudienceEventPreview"
              }
            }
          }
        },
        "tags": [
          "mna"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A UUID string identifying this audience event.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/mna/events/v1/audience-events/{id}/status/": {
      "post": {
        "operationId": "mna_events_v1_audience-events_update_status",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AudienceEventStatus"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AudienceEventStatus"
            }
          }
        },
        "tags": [
          "mna"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A UUID string identifying this audience event.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/mna/events/v1/email-address-senders/": {
      "get": {
        "operationId": "mna_events_v1_email-address-senders_list",
        "description": "",
        "parameters": [
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/EmailAddressSender"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "mna"
        ]
      },
      "post": {
        "operationId": "mna_events_v1_email-address-senders_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmailAddressSender"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/EmailAddressSender"
            }
          }
        },
        "tags": [
          "mna"
        ]
      },
      "parameters": []
    },
    "/mna/events/v1/email-address-senders/{id}/": {
      "get": {
        "operationId": "mna_events_v1_email-address-senders_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/EmailAddressSender"
            }
          }
        },
        "tags": [
          "mna"
        ]
      },
      "patch": {
        "operationId": "mna_events_v1_email-address-senders_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmailAddressSender"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/EmailAddressSender"
            }
          }
        },
        "tags": [
          "mna"
        ]
      },
      "delete": {
        "operationId": "mna_events_v1_email-address-senders_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "mna"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this email address sender.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/mna/events/v1/email-events/": {
      "get": {
        "operationId": "mna_events_v1_email-events_list",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "email",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "event",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "ip",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "email_address",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/EmailEvent"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "mna"
        ]
      },
      "parameters": []
    },
    "/mna/events/v1/email-events/sendgrid/": {
      "post": {
        "operationId": "mna_events_v1_email-events_sendgrid_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmailEvent"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/EmailEvent"
            }
          }
        },
        "tags": [
          "mna"
        ]
      },
      "parameters": []
    },
    "/mna/events/v1/email-events/{id}/": {
      "get": {
        "operationId": "mna_events_v1_email-events_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/EmailEvent"
            }
          }
        },
        "tags": [
          "mna"
        ]
      },
      "delete": {
        "operationId": "mna_events_v1_email-events_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "mna"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique id assigned to this event by SendGrid",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/mna/events/v1/email-templates/": {
      "get": {
        "operationId": "mna_events_v1_email-templates_list",
        "description": "",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "event_type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "standard_template_type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/EmailTemplate"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "mna"
        ]
      },
      "post": {
        "operationId": "mna_events_v1_email-templates_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmailTemplate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/EmailTemplate"
            }
          }
        },
        "tags": [
          "mna"
        ]
      },
      "parameters": []
    },
    "/mna/events/v1/email-templates/{id}/": {
      "get": {
        "operationId": "mna_events_v1_email-templates_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/EmailTemplate"
            }
          }
        },
        "tags": [
          "mna"
        ]
      },
      "patch": {
        "operationId": "mna_events_v1_email-templates_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmailTemplate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/EmailTemplate"
            }
          }
        },
        "tags": [
          "mna"
        ]
      },
      "delete": {
        "operationId": "mna_events_v1_email-templates_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "mna"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this email template.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/mna/events/v1/emails/": {
      "get": {
        "operationId": "mna_events_v1_emails_list",
        "description": "",
        "parameters": [
          {
            "name": "to",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "sg_message_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Email"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "mna"
        ]
      },
      "post": {
        "operationId": "mna_events_v1_emails_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Email"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Email"
            }
          }
        },
        "tags": [
          "mna"
        ]
      },
      "parameters": []
    },
    "/mna/events/v1/emails/{id}/": {
      "get": {
        "operationId": "mna_events_v1_emails_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Email"
            }
          }
        },
        "tags": [
          "mna"
        ]
      },
      "delete": {
        "operationId": "mna_events_v1_emails_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "mna"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this email.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/mna/events/v1/event-types/": {
      "get": {
        "operationId": "mna_events_v1_event-types_list",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Multiple values may be separated by commas.",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "active",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "approved",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "aggregation_rule",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "email_address_senders",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "producer",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/EventType"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "mna"
        ]
      },
      "post": {
        "operationId": "mna_events_v1_event-types_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EventType"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/EventType"
            }
          }
        },
        "tags": [
          "mna"
        ]
      },
      "parameters": []
    },
    "/mna/events/v1/event-types/{id}/": {
      "get": {
        "operationId": "mna_events_v1_event-types_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/EventType"
            }
          }
        },
        "tags": [
          "mna"
        ]
      },
      "put": {
        "operationId": "mna_events_v1_event-types_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EventType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/EventType"
            }
          }
        },
        "tags": [
          "mna"
        ]
      },
      "patch": {
        "operationId": "mna_events_v1_event-types_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EventType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/EventType"
            }
          }
        },
        "tags": [
          "mna"
        ]
      },
      "delete": {
        "operationId": "mna_events_v1_event-types_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "mna"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this event type.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/mna/events/v1/producers/": {
      "get": {
        "operationId": "mna_events_v1_producers_list",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Multiple values may be separated by commas.",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Producer"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "mna"
        ]
      },
      "post": {
        "operationId": "mna_events_v1_producers_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Producer"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Producer"
            }
          }
        },
        "tags": [
          "mna"
        ]
      },
      "parameters": []
    },
    "/mna/events/v1/producers/{id}/": {
      "get": {
        "operationId": "mna_events_v1_producers_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Producer"
            }
          }
        },
        "tags": [
          "mna"
        ]
      },
      "put": {
        "operationId": "mna_events_v1_producers_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Producer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Producer"
            }
          }
        },
        "tags": [
          "mna"
        ]
      },
      "patch": {
        "operationId": "mna_events_v1_producers_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Producer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Producer"
            }
          }
        },
        "tags": [
          "mna"
        ]
      },
      "delete": {
        "operationId": "mna_events_v1_producers_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "mna"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A UUID string identifying this producer.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/mna/events/v1/run/aggregate-stats/": {
      "post": {
        "operationId": "mna_events_v1_run_aggregate-stats_create",
        "description": "",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "mna"
        ]
      },
      "parameters": []
    },
    "/mna/events/v1/run/archive-and-delete/": {
      "post": {
        "operationId": "mna_events_v1_run_archive-and-delete_create",
        "description": "",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "mna"
        ]
      },
      "parameters": []
    },
    "/mna/events/v1/user-email-events/": {
      "get": {
        "operationId": "mna_events_v1_user-email-events_list",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Multiple values may be separated by commas.",
            "required": false,
            "type": "string"
          },
          {
            "name": "reference_id",
            "in": "query",
            "description": "Multiple values may be separated by commas.",
            "required": false,
            "type": "string"
          },
          {
            "name": "target_user_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "number"
          },
          {
            "name": "audience_event",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "email_address",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "organization_id",
            "in": "query",
            "description": "Multiple values may be separated by commas.",
            "required": false,
            "type": "string"
          },
          {
            "name": "salesforce_account_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "event_type_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "delivered",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "sent_before",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "sent_after",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "template_vars_contains",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/UserEmailEvent"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "mna"
        ]
      },
      "post": {
        "operationId": "mna_events_v1_user-email-events_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserEmailEvent"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserEmailEvent"
            }
          }
        },
        "tags": [
          "mna"
        ]
      },
      "parameters": []
    },
    "/mna/events/v1/user-email-events/{id}/": {
      "get": {
        "operationId": "mna_events_v1_user-email-events_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserEmailEvent"
            }
          }
        },
        "tags": [
          "mna"
        ]
      },
      "put": {
        "operationId": "mna_events_v1_user-email-events_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserEmailEvent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserEmailEvent"
            }
          }
        },
        "tags": [
          "mna"
        ]
      },
      "delete": {
        "operationId": "mna_events_v1_user-email-events_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "mna"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/mna/events/v1/user-web-events/": {
      "get": {
        "operationId": "mna_events_v1_user-web-events_list",
        "description": "",
        "parameters": [
          {
            "name": "target_user_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "audience_event",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "events_newer",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "events_older",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "user_pref_do_not_deliver",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "user_email",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "show",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/UserWebEvent"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "mna"
        ]
      },
      "post": {
        "operationId": "mna_events_v1_user-web-events_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserWebEvent"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserWebEvent"
            }
          }
        },
        "tags": [
          "mna"
        ]
      },
      "parameters": []
    },
    "/mna/events/v1/user-web-events/aggregation/{target_user_id}/": {
      "get": {
        "operationId": "mna_events_v1_user-web-events_fetch_aggregated_events",
        "description": "Given a user id we will query for all user web events for that user within a look back range (found at:\nsettings.USER_WEB_EVENT_AGGREGATION_LOOKBACK_DAYS). Once we have all of the events we will separate out the\nevents to be aggregated, check redis for a cached version of the aggregate data and if it doesn't exist we will\ngenerate a cache and write it to redis. The non aggregated events will then be passed through the event\nserializer, combined with the aggregated events and returned to the user.\n:param request:\n:param target_user_id: The Identity ID of the current user\n:return: Response(): A dict containing all of the aggregated and non aggregated events as 'results'",
        "parameters": [
          {
            "name": "target_user_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "audience_event",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "events_newer",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "events_older",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "user_pref_do_not_deliver",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "user_email",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "show",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/UserWebEvent"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "mna"
        ]
      },
      "parameters": [
        {
          "name": "target_user_id",
          "in": "path",
          "description": "The identity user ID of the user the event is for.",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/mna/events/v1/user-web-events/archive-events/": {
      "post": {
        "operationId": "mna_events_v1_user-web-events_bulk_archive_events",
        "summary": "Operation to archive a batch of User Web Events.",
        "description": "This action accepts a 'days_old' integer in the body of the post that defaults to 90 and must be greater than 90.\nThe most recent 'MAXIMUM_EVENTS_TO_ARCHIVE' UserWebEvent older than 'days_old' will be archived\n\nThis endpoint returns the number of events archived, and the number of remaining events eligible for archiving",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserWebEvent"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserWebEvent"
            }
          }
        },
        "tags": [
          "mna"
        ]
      },
      "parameters": []
    },
    "/mna/events/v1/user-web-events/read/{target_user_id}/": {
      "post": {
        "operationId": "mna_events_v1_user-web-events_mark_all_as_read",
        "summary": "Mark all user web events as read (e.g. \"interacted_at\") for a specific user or the whole system",
        "description": "Users can mark their own UWEs as read, but we also want admins to be able\nto mark all events in the system as read when the need arises.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserWebEvent"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserWebEvent"
            }
          }
        },
        "tags": [
          "mna"
        ]
      },
      "parameters": [
        {
          "name": "target_user_id",
          "in": "path",
          "description": "The identity user ID of the user the event is for.",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/mna/events/v1/user-web-events/unseen/{target_user_id}/": {
      "get": {
        "operationId": "mna_events_v1_user-web-events_unseen_read",
        "description": "",
        "parameters": [
          {
            "name": "target_user_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "audience_event",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "events_newer",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "events_older",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "user_pref_do_not_deliver",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "user_email",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "show",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/UserWebEvent"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "mna"
        ]
      },
      "post": {
        "operationId": "mna_events_v1_user-web-events_unseen_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserWebEvent"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserWebEvent"
            }
          }
        },
        "tags": [
          "mna"
        ]
      },
      "parameters": [
        {
          "name": "target_user_id",
          "in": "path",
          "description": "The identity user ID of the user the event is for.",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/mna/events/v1/user-web-events/{id}/": {
      "get": {
        "operationId": "mna_events_v1_user-web-events_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserWebEvent"
            }
          }
        },
        "tags": [
          "mna"
        ]
      },
      "put": {
        "operationId": "mna_events_v1_user-web-events_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserWebEvent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserWebEvent"
            }
          }
        },
        "tags": [
          "mna"
        ]
      },
      "patch": {
        "operationId": "mna_events_v1_user-web-events_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserWebEvent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserWebEvent"
            }
          }
        },
        "tags": [
          "mna"
        ]
      },
      "delete": {
        "operationId": "mna_events_v1_user-web-events_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "mna"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A UUID string identifying this user web event.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/mna/events/v1/web-templates/": {
      "get": {
        "operationId": "mna_events_v1_web-templates_list",
        "description": "",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "event_type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/WebTemplate"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "mna"
        ]
      },
      "post": {
        "operationId": "mna_events_v1_web-templates_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WebTemplate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/WebTemplate"
            }
          }
        },
        "tags": [
          "mna"
        ]
      },
      "parameters": []
    },
    "/mna/events/v1/web-templates/{id}/": {
      "get": {
        "operationId": "mna_events_v1_web-templates_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/WebTemplate"
            }
          }
        },
        "tags": [
          "mna"
        ]
      },
      "patch": {
        "operationId": "mna_events_v1_web-templates_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WebTemplate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/WebTemplate"
            }
          }
        },
        "tags": [
          "mna"
        ]
      },
      "delete": {
        "operationId": "mna_events_v1_web-templates_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "mna"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this web template.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/task-runner-health/": {
      "get": {
        "operationId": "task-runner-health_list",
        "summary": "Test that a task can be enqueued, dequeued, and processed.",
        "description": "This lets us check that the connections to our queues are working\nand that the task runners are actually processing tasks in a given environment.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "task-runner-health"
        ]
      },
      "parameters": []
    },
    "/task-runner-metric-check/": {
      "get": {
        "operationId": "task-runner-metric-check_list",
        "summary": "Test that a success or failure task can be processed while logging task details",
        "description": "Accepts a query param of \"status=success\" or \"status=failure\",\nand will pass an appropriate function to the task runner based on that param\n(success simply returns, and failure raises an exception).\n\nThis lets us test our task metric logging more easily.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "task-runner-metric-check"
        ]
      },
      "parameters": []
    },
    "/up/": {
      "get": {
        "operationId": "up_list",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "up"
        ]
      },
      "parameters": []
    },
    "/v1/events/aggregate-stats/": {
      "get": {
        "operationId": "v1_events_aggregate-stats_list",
        "description": "",
        "parameters": [
          {
            "name": "event_type_id",
            "in": "query",
            "description": "Multiple values may be separated by commas.",
            "required": false,
            "type": "string"
          },
          {
            "name": "application_id",
            "in": "query",
            "description": "Multiple values may be separated by commas.",
            "required": false,
            "type": "string"
          },
          {
            "name": "to_email_address",
            "in": "query",
            "description": "Multiple values may be separated by commas.",
            "required": false,
            "type": "string"
          },
          {
            "name": "to_user_id",
            "in": "query",
            "description": "Multiple values may be separated by commas.",
            "required": false,
            "type": "string"
          },
          {
            "name": "from_email_address",
            "in": "query",
            "description": "Multiple values may be separated by commas.",
            "required": false,
            "type": "string"
          },
          {
            "name": "notification_type",
            "in": "query",
            "description": "Multiple values may be separated by commas.",
            "required": false,
            "type": "string"
          },
          {
            "name": "opt_out",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "sent_before",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "sent_after",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "notification_count__gte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "number"
          },
          {
            "name": "notification_count__lte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "number"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "The pagination cursor value.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "results"
              ],
              "type": "object",
              "properties": {
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AggregateStats"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "parameters": []
    },
    "/v1/events/aggregation-rules/": {
      "get": {
        "operationId": "v1_events_aggregation-rules_list",
        "description": "",
        "parameters": [
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AggregationRule"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "post": {
        "operationId": "v1_events_aggregation-rules_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AggregationRule"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AggregationRule"
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "parameters": []
    },
    "/v1/events/aggregation-rules/{id}/": {
      "get": {
        "operationId": "v1_events_aggregation-rules_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AggregationRule"
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "patch": {
        "operationId": "v1_events_aggregation-rules_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AggregationRule"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AggregationRule"
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "delete": {
        "operationId": "v1_events_aggregation-rules_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "v1"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this aggregation rule.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/v1/events/audience-events/": {
      "get": {
        "operationId": "v1_events_audience-events_list",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Multiple values may be separated by commas.",
            "required": false,
            "type": "string"
          },
          {
            "name": "email_template",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "web_template",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "event_type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "created_before",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "created_after",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "template_vars_contains",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AudienceEvent"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "post": {
        "operationId": "v1_events_audience-events_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AudienceEvent"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AudienceEvent"
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "parameters": []
    },
    "/v1/events/audience-events/{id}/": {
      "get": {
        "operationId": "v1_events_audience-events_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AudienceEvent"
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "put": {
        "operationId": "v1_events_audience-events_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AudienceEvent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AudienceEvent"
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "delete": {
        "operationId": "v1_events_audience-events_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "v1"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A UUID string identifying this audience event.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/v1/events/audience-events/{id}/preview-email/": {
      "get": {
        "operationId": "v1_events_audience-events_preview_email",
        "description": "",
        "parameters": [
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AudienceEventPreview"
              }
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A UUID string identifying this audience event.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/v1/events/audience-events/{id}/preview-web/": {
      "get": {
        "operationId": "v1_events_audience-events_preview_web",
        "description": "",
        "parameters": [
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AudienceEventPreview"
              }
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A UUID string identifying this audience event.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/v1/events/audience-events/{id}/status/": {
      "post": {
        "operationId": "v1_events_audience-events_update_status",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AudienceEventStatus"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AudienceEventStatus"
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A UUID string identifying this audience event.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/v1/events/email-address-senders/": {
      "get": {
        "operationId": "v1_events_email-address-senders_list",
        "description": "",
        "parameters": [
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/EmailAddressSender"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "post": {
        "operationId": "v1_events_email-address-senders_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmailAddressSender"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/EmailAddressSender"
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "parameters": []
    },
    "/v1/events/email-address-senders/{id}/": {
      "get": {
        "operationId": "v1_events_email-address-senders_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/EmailAddressSender"
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "patch": {
        "operationId": "v1_events_email-address-senders_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmailAddressSender"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/EmailAddressSender"
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "delete": {
        "operationId": "v1_events_email-address-senders_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "v1"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this email address sender.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/v1/events/email-events/": {
      "get": {
        "operationId": "v1_events_email-events_list",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "email",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "event",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "ip",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "email_address",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/EmailEvent"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "parameters": []
    },
    "/v1/events/email-events/sendgrid/": {
      "post": {
        "operationId": "v1_events_email-events_sendgrid_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmailEvent"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/EmailEvent"
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "parameters": []
    },
    "/v1/events/email-events/{id}/": {
      "get": {
        "operationId": "v1_events_email-events_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/EmailEvent"
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "delete": {
        "operationId": "v1_events_email-events_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "v1"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique id assigned to this event by SendGrid",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/v1/events/email-templates/": {
      "get": {
        "operationId": "v1_events_email-templates_list",
        "description": "",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "event_type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "standard_template_type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/EmailTemplate"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "post": {
        "operationId": "v1_events_email-templates_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmailTemplate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/EmailTemplate"
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "parameters": []
    },
    "/v1/events/email-templates/{id}/": {
      "get": {
        "operationId": "v1_events_email-templates_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/EmailTemplate"
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "patch": {
        "operationId": "v1_events_email-templates_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmailTemplate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/EmailTemplate"
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "delete": {
        "operationId": "v1_events_email-templates_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "v1"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this email template.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/v1/events/emails/": {
      "get": {
        "operationId": "v1_events_emails_list",
        "description": "",
        "parameters": [
          {
            "name": "to",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "sg_message_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Email"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "post": {
        "operationId": "v1_events_emails_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Email"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Email"
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "parameters": []
    },
    "/v1/events/emails/{id}/": {
      "get": {
        "operationId": "v1_events_emails_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Email"
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "delete": {
        "operationId": "v1_events_emails_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "v1"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this email.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/v1/events/event-types/": {
      "get": {
        "operationId": "v1_events_event-types_list",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Multiple values may be separated by commas.",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "active",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "approved",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "aggregation_rule",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "email_address_senders",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "producer",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/EventType"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "post": {
        "operationId": "v1_events_event-types_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EventType"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/EventType"
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "parameters": []
    },
    "/v1/events/event-types/{id}/": {
      "get": {
        "operationId": "v1_events_event-types_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/EventType"
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "put": {
        "operationId": "v1_events_event-types_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EventType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/EventType"
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "patch": {
        "operationId": "v1_events_event-types_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EventType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/EventType"
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "delete": {
        "operationId": "v1_events_event-types_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "v1"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this event type.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/v1/events/producers/": {
      "get": {
        "operationId": "v1_events_producers_list",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Multiple values may be separated by commas.",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Producer"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "post": {
        "operationId": "v1_events_producers_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Producer"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Producer"
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "parameters": []
    },
    "/v1/events/producers/{id}/": {
      "get": {
        "operationId": "v1_events_producers_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Producer"
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "put": {
        "operationId": "v1_events_producers_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Producer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Producer"
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "patch": {
        "operationId": "v1_events_producers_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Producer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Producer"
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "delete": {
        "operationId": "v1_events_producers_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "v1"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A UUID string identifying this producer.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/v1/events/run/aggregate-stats/": {
      "post": {
        "operationId": "v1_events_run_aggregate-stats_create",
        "description": "",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "v1"
        ]
      },
      "parameters": []
    },
    "/v1/events/run/archive-and-delete/": {
      "post": {
        "operationId": "v1_events_run_archive-and-delete_create",
        "description": "",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "v1"
        ]
      },
      "parameters": []
    },
    "/v1/events/user-email-events/": {
      "get": {
        "operationId": "v1_events_user-email-events_list",
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Multiple values may be separated by commas.",
            "required": false,
            "type": "string"
          },
          {
            "name": "reference_id",
            "in": "query",
            "description": "Multiple values may be separated by commas.",
            "required": false,
            "type": "string"
          },
          {
            "name": "target_user_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "number"
          },
          {
            "name": "audience_event",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "email_address",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "organization_id",
            "in": "query",
            "description": "Multiple values may be separated by commas.",
            "required": false,
            "type": "string"
          },
          {
            "name": "salesforce_account_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "event_type_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "delivered",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "sent_before",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "sent_after",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "template_vars_contains",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/UserEmailEvent"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "post": {
        "operationId": "v1_events_user-email-events_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserEmailEvent"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserEmailEvent"
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "parameters": []
    },
    "/v1/events/user-email-events/{id}/": {
      "get": {
        "operationId": "v1_events_user-email-events_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserEmailEvent"
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "put": {
        "operationId": "v1_events_user-email-events_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserEmailEvent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserEmailEvent"
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "delete": {
        "operationId": "v1_events_user-email-events_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "v1"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/v1/events/user-web-events/": {
      "get": {
        "operationId": "v1_events_user-web-events_list",
        "description": "",
        "parameters": [
          {
            "name": "target_user_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "audience_event",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "events_newer",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "events_older",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "user_pref_do_not_deliver",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "user_email",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "show",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/UserWebEvent"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "post": {
        "operationId": "v1_events_user-web-events_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserWebEvent"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserWebEvent"
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "parameters": []
    },
    "/v1/events/user-web-events/aggregation/{target_user_id}/": {
      "get": {
        "operationId": "v1_events_user-web-events_fetch_aggregated_events",
        "description": "Given a user id we will query for all user web events for that user within a look back range (found at:\nsettings.USER_WEB_EVENT_AGGREGATION_LOOKBACK_DAYS). Once we have all of the events we will separate out the\nevents to be aggregated, check redis for a cached version of the aggregate data and if it doesn't exist we will\ngenerate a cache and write it to redis. The non aggregated events will then be passed through the event\nserializer, combined with the aggregated events and returned to the user.\n:param request:\n:param target_user_id: The Identity ID of the current user\n:return: Response(): A dict containing all of the aggregated and non aggregated events as 'results'",
        "parameters": [
          {
            "name": "target_user_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "audience_event",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "events_newer",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "events_older",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "user_pref_do_not_deliver",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "user_email",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "show",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/UserWebEvent"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "parameters": [
        {
          "name": "target_user_id",
          "in": "path",
          "description": "The identity user ID of the user the event is for.",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/v1/events/user-web-events/archive-events/": {
      "post": {
        "operationId": "v1_events_user-web-events_bulk_archive_events",
        "summary": "Operation to archive a batch of User Web Events.",
        "description": "This action accepts a 'days_old' integer in the body of the post that defaults to 90 and must be greater than 90.\nThe most recent 'MAXIMUM_EVENTS_TO_ARCHIVE' UserWebEvent older than 'days_old' will be archived\n\nThis endpoint returns the number of events archived, and the number of remaining events eligible for archiving",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserWebEvent"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserWebEvent"
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "parameters": []
    },
    "/v1/events/user-web-events/read/{target_user_id}/": {
      "post": {
        "operationId": "v1_events_user-web-events_mark_all_as_read",
        "summary": "Mark all user web events as read (e.g. \"interacted_at\") for a specific user or the whole system",
        "description": "Users can mark their own UWEs as read, but we also want admins to be able\nto mark all events in the system as read when the need arises.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserWebEvent"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserWebEvent"
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "parameters": [
        {
          "name": "target_user_id",
          "in": "path",
          "description": "The identity user ID of the user the event is for.",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/v1/events/user-web-events/unseen/{target_user_id}/": {
      "get": {
        "operationId": "v1_events_user-web-events_unseen_read",
        "description": "",
        "parameters": [
          {
            "name": "target_user_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "audience_event",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "events_newer",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "events_older",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "user_pref_do_not_deliver",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "user_email",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "show",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/UserWebEvent"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "post": {
        "operationId": "v1_events_user-web-events_unseen_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserWebEvent"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserWebEvent"
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "parameters": [
        {
          "name": "target_user_id",
          "in": "path",
          "description": "The identity user ID of the user the event is for.",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/v1/events/user-web-events/{id}/": {
      "get": {
        "operationId": "v1_events_user-web-events_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserWebEvent"
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "put": {
        "operationId": "v1_events_user-web-events_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserWebEvent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserWebEvent"
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "patch": {
        "operationId": "v1_events_user-web-events_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserWebEvent"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserWebEvent"
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "delete": {
        "operationId": "v1_events_user-web-events_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "v1"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A UUID string identifying this user web event.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/v1/events/web-templates/": {
      "get": {
        "operationId": "v1_events_web-templates_list",
        "description": "",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "event_type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/WebTemplate"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "post": {
        "operationId": "v1_events_web-templates_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WebTemplate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/WebTemplate"
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "parameters": []
    },
    "/v1/events/web-templates/{id}/": {
      "get": {
        "operationId": "v1_events_web-templates_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/WebTemplate"
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "patch": {
        "operationId": "v1_events_web-templates_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WebTemplate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/WebTemplate"
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "delete": {
        "operationId": "v1_events_web-templates_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "v1"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this web template.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/v1/preferences/available/": {
      "get": {
        "operationId": "v1_preferences_available",
        "description": "",
        "parameters": [
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AvailablePreferences"
              }
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "parameters": []
    },
    "/v1/preferences/delivery-rules/": {
      "get": {
        "operationId": "v1_preferences_delivery-rules_list",
        "description": "",
        "parameters": [
          {
            "name": "org_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "The pagination cursor value.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "v1"
        ]
      },
      "post": {
        "operationId": "v1_preferences_delivery-rules_create",
        "description": "",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "v1"
        ]
      },
      "parameters": []
    },
    "/v1/preferences/delivery-rules/{id}/": {
      "get": {
        "operationId": "v1_preferences_delivery-rules_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "v1"
        ]
      },
      "put": {
        "operationId": "v1_preferences_delivery-rules_update",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "v1"
        ]
      },
      "delete": {
        "operationId": "v1_preferences_delivery-rules_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "v1"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A UUID string identifying this delivery rule.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/v1/preferences/email/group-unsubscribe/{signed_payload}/": {
      "get": {
        "operationId": "v1_preferences_email_group-unsubscribe_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/EmailGroupUnsubscribe"
            }
          }
        },
        "produces": [],
        "tags": [
          "v1"
        ]
      },
      "post": {
        "operationId": "v1_preferences_email_group-unsubscribe_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EmailGroupUnsubscribe"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/EmailGroupUnsubscribe"
            }
          }
        },
        "produces": [],
        "tags": [
          "v1"
        ]
      },
      "parameters": [
        {
          "name": "signed_payload",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/v1/preferences/email/resubscribe/": {
      "post": {
        "operationId": "v1_preferences_email_resubscribe",
        "description": "Method to send resubscribe email",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "v1"
        ]
      },
      "parameters": []
    },
    "/v1/preferences/email/resubscribe/{signed_payload}/": {
      "get": {
        "operationId": "v1_preferences_email_resubscribe",
        "summary": "Confirms resubscription, or if already confirmed then actually resubscribes",
        "description": "The template will be loaded with template variables according to the operation\nwe're performing, which is specified by the template variable 'mode'\n\nmode == confirm:\n    url (url to direct users to click to unsubscribe)\n    user (str)\n    org (str)\n    category (str)\nmode == completed:\n    user (str)\n    org (str)\n    category (str)\nmode == error:\n    error_string (str)",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "produces": [],
        "tags": [
          "v1"
        ]
      },
      "parameters": [
        {
          "name": "signed_payload",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/v1/preferences/email/unsubscribe/{signed_payload}/": {
      "get": {
        "operationId": "v1_preferences_email_unsubscribe",
        "summary": "Confirms unsubscription, or if already confirmed then actually unsubscribes",
        "description": "The template will be loaded with template variables according to the operation\nwe're performing, which is specified by the template variable 'mode'\n\nmode == confirm:\n    url (url to direct users to click to unsubscribe)\n    user (str)\n    org (str)\n    category (str)\nmode == completed:\n    user (str)\n    org (str)\n    category (str)\nmode == error:\n    error_string (str)",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "produces": [],
        "tags": [
          "v1"
        ]
      },
      "parameters": [
        {
          "name": "signed_payload",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/v1/preferences/notifications/": {
      "get": {
        "operationId": "v1_preferences_notifications_list",
        "description": "",
        "parameters": [
          {
            "name": "user",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "org_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/NotificationPreference"
              }
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "post": {
        "operationId": "v1_preferences_notifications_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NotificationPreference"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/NotificationPreference"
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "parameters": []
    },
    "/v1/preferences/user-delivery-preferences/": {
      "post": {
        "operationId": "v1_preferences_resolve_user_delivery_preferences",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserDeliveryPreferenceInput"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserDeliveryPreferenceInput"
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "parameters": []
    },
    "/v1/usertags/associations/": {
      "get": {
        "operationId": "v1_usertags_associations_list",
        "description": "",
        "parameters": [
          {
            "name": "tags",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "user",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "org_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "group",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/UserTagAssociationReadOnly"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "post": {
        "operationId": "v1_usertags_associations_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MultipleUsersTagAssociation"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/MultipleUsersTagAssociation"
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "put": {
        "operationId": "v1_usertags_associations_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MultipleUsersTagAssociation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/MultipleUsersTagAssociation"
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "patch": {
        "operationId": "v1_usertags_associations_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/MultipleUsersTagAssociation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/MultipleUsersTagAssociation"
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "delete": {
        "operationId": "v1_usertags_associations_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "v1"
        ]
      },
      "parameters": []
    },
    "/v1/usertags/groups/": {
      "get": {
        "operationId": "v1_usertags_groups_list",
        "description": "",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Group"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "post": {
        "operationId": "v1_usertags_groups_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Group"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Group"
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "parameters": []
    },
    "/v1/usertags/groups/{group_name}/tags/": {
      "get": {
        "operationId": "v1_usertags_groups_tags_list",
        "description": "",
        "parameters": [
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Tag"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "post": {
        "operationId": "v1_usertags_groups_tags_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Tag"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Tag"
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "parameters": [
        {
          "name": "group_name",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/v1/usertags/groups/{group_name}/tags/{name}/": {
      "get": {
        "operationId": "v1_usertags_groups_tags_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Tag"
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "put": {
        "operationId": "v1_usertags_groups_tags_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Tag"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Tag"
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "patch": {
        "operationId": "v1_usertags_groups_tags_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Tag"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Tag"
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "delete": {
        "operationId": "v1_usertags_groups_tags_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "v1"
        ]
      },
      "parameters": [
        {
          "name": "group_name",
          "in": "path",
          "required": true,
          "type": "string"
        },
        {
          "name": "name",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/v1/usertags/groups/{name}/": {
      "get": {
        "operationId": "v1_usertags_groups_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Group"
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "put": {
        "operationId": "v1_usertags_groups_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Group"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Group"
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "patch": {
        "operationId": "v1_usertags_groups_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Group"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Group"
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "delete": {
        "operationId": "v1_usertags_groups_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "v1"
        ]
      },
      "parameters": [
        {
          "name": "name",
          "in": "path",
          "required": true,
          "type": "string",
          "format": "slug",
          "pattern": "^[-a-zA-Z0-9_]+$"
        }
      ]
    },
    "/v1/usertags/tags/": {
      "get": {
        "operationId": "v1_usertags_tags_list",
        "description": "",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "group",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "A page number within the paginated result set.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Tag"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "v1"
        ]
      },
      "parameters": []
    },
    "/v2/events/audience-events/": {
      "get": {
        "operationId": "v2_events_audience-events_list",
        "summary": "Pass a queryset to the pagination class when calling get_paginated_response()",
        "description": "Sometimes we need to use the queryset to calculate different properties we want to pass\non in the pagination response, especially record counts when using cursor pagination. DRF viewsets\nwill call <pagination_class>.get_paginated_response() and then return that result, and by also\npassing in the view's queryset we can get extra information (e.g. explain() planned row numbers, etc.)\nfrom the queryset. This isn't passed in by default, hence the override.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Multiple values may be separated by commas.",
            "required": false,
            "type": "string"
          },
          {
            "name": "email_template",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "web_template",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "event_type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "created_before",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "created_after",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "template_vars_contains",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "The pagination cursor value.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "results"
              ],
              "type": "object",
              "properties": {
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/AudienceEventV2ReadOnly"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "v2"
        ]
      },
      "post": {
        "operationId": "v2_events_audience-events_create",
        "summary": "Use cursor pagination so we can list really large numbers of records.",
        "description": "Normal pagination breaks down under our record load, so using cursor-based pagination\nlets us avoid overloading the database with queries it can't fulfill thus leading to\nrequest timeouts.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AudienceEventV2"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AudienceEventV2"
            }
          }
        },
        "tags": [
          "v2"
        ]
      },
      "parameters": []
    },
    "/v2/events/audience-events/{id}/": {
      "get": {
        "operationId": "v2_events_audience-events_read",
        "summary": "Use cursor pagination so we can list really large numbers of records.",
        "description": "Normal pagination breaks down under our record load, so using cursor-based pagination\nlets us avoid overloading the database with queries it can't fulfill thus leading to\nrequest timeouts.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AudienceEventV2"
            }
          }
        },
        "tags": [
          "v2"
        ]
      },
      "put": {
        "operationId": "v2_events_audience-events_update",
        "summary": "Use cursor pagination so we can list really large numbers of records.",
        "description": "Normal pagination breaks down under our record load, so using cursor-based pagination\nlets us avoid overloading the database with queries it can't fulfill thus leading to\nrequest timeouts.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AudienceEventV2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AudienceEventV2"
            }
          }
        },
        "tags": [
          "v2"
        ]
      },
      "delete": {
        "operationId": "v2_events_audience-events_delete",
        "summary": "Use cursor pagination so we can list really large numbers of records.",
        "description": "Normal pagination breaks down under our record load, so using cursor-based pagination\nlets us avoid overloading the database with queries it can't fulfill thus leading to\nrequest timeouts.",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "v2"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A UUID string identifying this audience event.",
          "required": true,
          "type": "string",
          "format": "uuid"
        }
      ]
    },
    "/v2/events/email-events/": {
      "get": {
        "operationId": "v2_events_email-events_list",
        "summary": "Pass a queryset to the pagination class when calling get_paginated_response()",
        "description": "Sometimes we need to use the queryset to calculate different properties we want to pass\non in the pagination response, especially record counts when using cursor pagination. DRF viewsets\nwill call <pagination_class>.get_paginated_response() and then return that result, and by also\npassing in the view's queryset we can get extra information (e.g. explain() planned row numbers, etc.)\nfrom the queryset. This isn't passed in by default, hence the override.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "email",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "event",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "ip",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "email_address",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "The pagination cursor value.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "results"
              ],
              "type": "object",
              "properties": {
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/EmailEvent"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "v2"
        ]
      },
      "parameters": []
    },
    "/v2/events/emails/": {
      "get": {
        "operationId": "v2_events_emails_list",
        "summary": "Pass a queryset to the pagination class when calling get_paginated_response()",
        "description": "Sometimes we need to use the queryset to calculate different properties we want to pass\non in the pagination response, especially record counts when using cursor pagination. DRF viewsets\nwill call <pagination_class>.get_paginated_response() and then return that result, and by also\npassing in the view's queryset we can get extra information (e.g. explain() planned row numbers, etc.)\nfrom the queryset. This isn't passed in by default, hence the override.",
        "parameters": [
          {
            "name": "to",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "sg_message_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "The pagination cursor value.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "results"
              ],
              "type": "object",
              "properties": {
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Email"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "v2"
        ]
      },
      "parameters": []
    },
    "/v2/events/run/email-aggregation/": {
      "post": {
        "operationId": "v2_events_run_email-aggregation_create",
        "description": "",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "v2"
        ]
      },
      "parameters": []
    },
    "/v2/events/user-email-events/": {
      "get": {
        "operationId": "v2_events_user-email-events_list",
        "summary": "Pass a queryset to the pagination class when calling get_paginated_response()",
        "description": "Sometimes we need to use the queryset to calculate different properties we want to pass\non in the pagination response, especially record counts when using cursor pagination. DRF viewsets\nwill call <pagination_class>.get_paginated_response() and then return that result, and by also\npassing in the view's queryset we can get extra information (e.g. explain() planned row numbers, etc.)\nfrom the queryset. This isn't passed in by default, hence the override.",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "Multiple values may be separated by commas.",
            "required": false,
            "type": "string"
          },
          {
            "name": "reference_id",
            "in": "query",
            "description": "Multiple values may be separated by commas.",
            "required": false,
            "type": "string"
          },
          {
            "name": "target_user_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "number"
          },
          {
            "name": "audience_event",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "email_address",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "organization_id",
            "in": "query",
            "description": "Multiple values may be separated by commas.",
            "required": false,
            "type": "string"
          },
          {
            "name": "salesforce_account_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "event_type_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "delivered",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "sent_before",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "sent_after",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "template_vars_contains",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "The pagination cursor value.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "results"
              ],
              "type": "object",
              "properties": {
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/UserEmailEvent"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "v2"
        ]
      },
      "parameters": []
    },
    "/v2/events/user-web-events/": {
      "get": {
        "operationId": "v2_events_user-web-events_list",
        "summary": "Pass a queryset to the pagination class when calling get_paginated_response()",
        "description": "Sometimes we need to use the queryset to calculate different properties we want to pass\non in the pagination response, especially record counts when using cursor pagination. DRF viewsets\nwill call <pagination_class>.get_paginated_response() and then return that result, and by also\npassing in the view's queryset we can get extra information (e.g. explain() planned row numbers, etc.)\nfrom the queryset. This isn't passed in by default, hence the override.",
        "parameters": [
          {
            "name": "target_user_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "audience_event",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "events_newer",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "events_older",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "user_pref_do_not_deliver",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "user_email",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "show",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "ordering",
            "in": "query",
            "description": "Which field to use when ordering the results.",
            "required": false,
            "type": "string"
          },
          {
            "name": "cursor",
            "in": "query",
            "description": "The pagination cursor value.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "results"
              ],
              "type": "object",
              "properties": {
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/UserWebEvent"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "v2"
        ]
      },
      "parameters": []
    },
    "/version/": {
      "get": {
        "operationId": "version_list",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "version"
        ]
      },
      "parameters": []
    }
  },
  "definitions": {
    "AggregateStats": {
      "type": "object",
      "properties": {
        "begin_time": {
          "title": "Begin time",
          "description": "When the time period this record covers begins (used for stats calculations)",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "end_time": {
          "title": "End time",
          "description": "When the time period this record covers ends (used for stats calculations)",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "to_email_address": {
          "title": "To email address",
          "description": "The event recipient's email address",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "to_user_id": {
          "title": "To user id",
          "description": "Identity Service User ID or the user email address",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "from_email_address": {
          "title": "From email address",
          "description": "From email address",
          "type": "string",
          "format": "email",
          "readOnly": true,
          "minLength": 1
        },
        "event_type_name": {
          "title": "Event type name",
          "description": "Name of the event type",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "application_id": {
          "title": "Application id",
          "description": "ID of Application that this event type belongs to",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "event_type_id": {
          "title": "Event type id",
          "description": "UUID of the event type",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "opt_out": {
          "title": "Opt out",
          "description": "True if the user opted out of recieving this notification",
          "type": "boolean",
          "readOnly": true
        },
        "notification_type": {
          "title": "Notification type",
          "description": "Type of user event",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "notification_count": {
          "title": "Notification count",
          "description": "Number of times a notification was sent to this user",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "AggregationRule": {
      "required": [
        "name",
        "frequency"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "_id": {
          "title": "id",
          "description": "UUID for the aggregation rule that can be set by the producer and used in all environments",
          "type": "string",
          "format": "uuid",
          "x-nullable": true
        },
        "created_at": {
          "title": "Created at",
          "description": "When this aggregation rule was created; not when a call to the rule occured from an audience event.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "modified_at": {
          "title": "Modified at",
          "description": "When this aggregation rule was patched.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 500,
          "minLength": 1
        },
        "frequency": {
          "title": "Frequency",
          "description": "How often the associated event should occur (in crontab syntax)",
          "type": "string",
          "maxLength": 500,
          "minLength": 1
        }
      }
    },
    "AudienceEvent": {
      "required": [
        "id",
        "event_type"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "Id",
          "type": "string",
          "format": "uuid"
        },
        "event_type": {
          "title": "Event type",
          "type": "integer"
        },
        "email_template": {
          "title": "Email template",
          "type": "integer",
          "x-nullable": true
        },
        "email_template_vars": {
          "title": "Email template vars",
          "type": "object",
          "x-nullable": true
        },
        "web_template": {
          "title": "Web template",
          "type": "integer",
          "x-nullable": true
        },
        "web_template_vars": {
          "title": "Web template vars",
          "type": "object",
          "x-nullable": true
        },
        "template_vars": {
          "title": "Template vars",
          "type": "object",
          "x-nullable": true
        },
        "aggregated": {
          "title": "Aggregated",
          "description": "Whether or not this audience event should be aggregated",
          "type": "boolean"
        },
        "scheduled_process_time": {
          "title": "Scheduled process time",
          "description": "The time when the AE should be processed according to the aggregation rule associated with its event type",
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "actual_process_time": {
          "title": "Actual process time",
          "description": "The time when the AE was processed",
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "from_email_address_sender": {
          "title": "From email address sender",
          "type": "integer",
          "x-nullable": true
        },
        "preference_org_id": {
          "title": "Preference org id",
          "description": "If this Audience Event is org-aware, this is the org id that it is associated with. Used for resolving user preferences",
          "type": "string",
          "maxLength": 50,
          "x-nullable": true
        },
        "audiences": {
          "title": "Audiences",
          "description": "A list of JSON objects defining the audiences that will receive this event, e.g. [{'type': 'is-user', 'id': '1234567890'}]",
          "type": "object",
          "x-nullable": true
        },
        "needs_resolution": {
          "title": "Needs resolution",
          "description": "Whether or not this AE needs its audiences to be resolved (automatically set on creation), this does not track if resolutions succeeded",
          "type": "boolean",
          "x-nullable": true
        },
        "allow_dangerously_large_audience_sizes": {
          "title": "Allow dangerously large audience sizes",
          "description": "Determines if producer is allowed to override audience size limit",
          "type": "boolean",
          "x-nullable": true
        },
        "to_audience": {
          "title": "To audience",
          "description": "A list of JSON objects defining the audiences in to that will receive this event, e.g. [{'type': 'is-user', 'id': '1234567890'}]",
          "type": "object",
          "x-nullable": true
        },
        "cc_audience": {
          "title": "Cc audience",
          "description": "A list of JSON objects defining the audiences in cc that will receive this event, e.g. [{'type': 'is-user', 'id': '1234567890'}]",
          "type": "object",
          "x-nullable": true
        },
        "bcc_audience": {
          "title": "Bcc audience",
          "description": "A list of JSON objects defining the audiences in bcc that will receive this event, e.g. [{'type': 'is-user', 'id': '1234567890'}]",
          "type": "object",
          "x-nullable": true
        },
        "stats_processed_at": {
          "title": "Stats processed at",
          "description": "The time when stats were processed for this audience event and its related user events",
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "version": {
          "title": "Version",
          "description": "viewset version the AE was created with",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "x-nullable": true
        },
        "status_message": {
          "title": "Status message",
          "description": "The description of what went wrong when trying to deliver this AudienceEvent",
          "type": "string",
          "maxLength": 8191,
          "x-nullable": true
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "AudienceEventPreview": {
      "type": "object",
      "properties": {
        "subject": {
          "title": "Subject",
          "type": "string",
          "readOnly": true,
          "x-nullable": true
        },
        "body": {
          "title": "Body",
          "type": "string",
          "readOnly": true,
          "x-nullable": true
        }
      }
    },
    "AudienceEventStatus": {
      "required": [
        "status",
        "message"
      ],
      "type": "object",
      "properties": {
        "status": {
          "title": "Status",
          "type": "string",
          "minLength": 1
        },
        "message": {
          "title": "Message",
          "type": "string",
          "minLength": 1
        }
      }
    },
    "EmailAddressSender": {
      "required": [
        "name",
        "email_address"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "created_at": {
          "title": "Created at",
          "description": "When this email address sender was created.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "modified_at": {
          "title": "Modified at",
          "description": "When this email address sender was patched.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 500,
          "minLength": 1
        },
        "email_address": {
          "title": "Email address",
          "description": "Email address for the sender",
          "type": "string",
          "format": "email",
          "maxLength": 500,
          "minLength": 1
        }
      }
    },
    "EmailEvent": {
      "required": [
        "id",
        "email_address",
        "timestamp",
        "event",
        "sg_message_id"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "Id",
          "description": "A unique id assigned to this event by SendGrid",
          "type": "string",
          "maxLength": 500,
          "minLength": 1
        },
        "created_at": {
          "title": "Created at",
          "description": "When this event was created in MNA, not when it was created or sent from SendGrid.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "email_address": {
          "title": "Email address",
          "description": "The email address associated with this event",
          "type": "string",
          "format": "email",
          "maxLength": 254,
          "minLength": 1
        },
        "timestamp": {
          "title": "Timestamp",
          "description": "The UNIX timestamp of when this event was sent from SendGrid",
          "type": "string",
          "format": "date-time"
        },
        "event": {
          "title": "Event",
          "description": "The type of this event",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "response": {
          "title": "Response",
          "description": "Full text of the HTTP response returned from the receiving server",
          "type": "string",
          "maxLength": 1000
        },
        "reason": {
          "title": "Reason",
          "description": "Extra information on certain statuses (e.g. bounced)",
          "type": "string",
          "maxLength": 5000000,
          "x-nullable": true
        },
        "status": {
          "title": "Status",
          "description": "Status code string corresponding to the HTTP status code received from the server",
          "type": "string",
          "maxLength": 10,
          "x-nullable": true
        },
        "ip": {
          "title": "Ip",
          "description": "IP address of the email recipient that triggered this event (open, clicked, etc.)",
          "type": "string",
          "minLength": 1,
          "x-nullable": true
        },
        "attempt": {
          "title": "Attempt",
          "description": "Number of times delivery of the associated email has been attempted",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "x-nullable": true
        },
        "sg_message_id": {
          "title": "Sg message id",
          "description": "Sendgrid message id",
          "type": "string",
          "maxLength": 500,
          "minLength": 1
        },
        "url": {
          "title": "Url",
          "description": "For click events, the URL that the recipient clicked",
          "type": "string",
          "format": "uri",
          "maxLength": 2000,
          "x-nullable": true
        },
        "email": {
          "title": "Email",
          "type": "integer",
          "x-nullable": true
        }
      }
    },
    "EmailTemplate": {
      "required": [
        "name",
        "agg_sub",
        "agg_body",
        "sub",
        "body",
        "event_type"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "from_email": {
          "title": "From email",
          "type": "string",
          "readOnly": true
        },
        "from_name": {
          "title": "From name",
          "type": "string",
          "readOnly": true
        },
        "_id": {
          "title": "id",
          "description": "UUID for the email template that can be set by the producer and used in all environments",
          "type": "string",
          "format": "uuid",
          "x-nullable": true
        },
        "created_at": {
          "title": "Created at",
          "description": "When this email template was created",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "description": "A human-readable identifier for this email template",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "version": {
          "title": "Version",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648
        },
        "agg_sub": {
          "title": "Agg sub",
          "type": "string",
          "maxLength": 1000,
          "minLength": 1
        },
        "agg_body": {
          "title": "Agg body",
          "type": "string",
          "maxLength": 5000000,
          "minLength": 1
        },
        "sub": {
          "title": "Sub",
          "type": "string",
          "maxLength": 1000,
          "minLength": 1
        },
        "body": {
          "title": "Body",
          "type": "string",
          "maxLength": 5000000,
          "minLength": 1
        },
        "standard_template_type": {
          "title": "Standard template type",
          "type": "string",
          "enum": [
            "disabled",
            "sps_standard_template"
          ]
        },
        "event_type": {
          "title": "Event type",
          "type": "integer"
        },
        "from_email_address_sender": {
          "title": "From email address sender",
          "type": "integer",
          "x-nullable": true
        }
      }
    },
    "Email": {
      "required": [
        "to",
        "from_address",
        "sg_message_id"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "created_at": {
          "title": "Created at",
          "description": "When this email type record was created.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "to": {
          "title": "To",
          "type": "string",
          "format": "email",
          "maxLength": 8191,
          "minLength": 1
        },
        "from_address": {
          "title": "From address",
          "type": "string",
          "format": "email",
          "maxLength": 8191,
          "minLength": 1
        },
        "body": {
          "title": "Body",
          "type": "string",
          "readOnly": true
        },
        "subject": {
          "title": "Subject",
          "type": "string",
          "readOnly": true
        },
        "sg_message_id": {
          "title": "Sg message id",
          "description": "sendgrid id",
          "type": "string",
          "maxLength": 8191,
          "minLength": 1,
          "x-nullable": true
        },
        "status": {
          "title": "Status",
          "type": "string",
          "readOnly": true
        },
        "delivered": {
          "title": "Delivered",
          "type": "string",
          "readOnly": true
        },
        "processed": {
          "title": "Processed",
          "type": "string",
          "readOnly": true
        },
        "open_count": {
          "title": "Open count",
          "type": "string",
          "readOnly": true
        },
        "click_count": {
          "title": "Click count",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "EventType": {
      "required": [
        "producer",
        "name",
        "allowed_audience_types"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "producer": {
          "title": "Producer",
          "type": "string",
          "format": "uuid"
        },
        "_id": {
          "title": "id",
          "description": "UUID for the event type that can be set by the producer and used in all environments",
          "type": "string",
          "format": "uuid",
          "x-nullable": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 500,
          "minLength": 1
        },
        "allowed_audience_types": {
          "type": "array",
          "items": {
            "title": "Allowed audience types",
            "type": "string",
            "enum": [
              "is-org",
              "is-user",
              "is-app",
              "is-role",
              "is-and",
              "is-or",
              "dc-app",
              "email-address",
              "mna-tags"
            ]
          },
          "minItems": 1
        },
        "active": {
          "title": "Active",
          "type": "boolean"
        },
        "approved": {
          "title": "Approved",
          "type": "boolean"
        },
        "rate_limit": {
          "title": "Rate limit",
          "description": "reqs/hour",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648
        },
        "custom_aggregation_vars": {
          "description": "Names of Template Vars that will be used to help group emails during aggregation",
          "type": "array",
          "items": {
            "title": "Custom aggregation vars",
            "type": "string",
            "maxLength": 500,
            "minLength": 1
          },
          "x-nullable": true
        },
        "override_user_preference": {
          "title": "Override user preference",
          "description": "Do not allow the user to disable notifications from this event type",
          "type": "boolean"
        },
        "application_id": {
          "title": "Application id",
          "description": "ID of Application that this event type most closely belongs to",
          "type": "string",
          "maxLength": 50
        },
        "allow_multi_org_audience": {
          "title": "Allow multi org audience",
          "description": "Determines if multi-org (e.g. is-app, is-role) audiences are allowed",
          "type": "boolean",
          "x-nullable": true
        },
        "allowed_override_audience_size": {
          "title": "Allowed override audience size",
          "description": "Audience Size to override audience limit. Max audience size: 10000",
          "type": "integer",
          "maximum": 10000,
          "minimum": -2147483648
        },
        "add_to_salesforce": {
          "title": "Add to salesforce",
          "description": "Determines if event notification should be sent to Salesforce",
          "type": "boolean",
          "x-nullable": true
        },
        "aggregation_rule": {
          "title": "Aggregation rule",
          "type": "integer",
          "x-nullable": true
        },
        "email_address_senders": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "uniqueItems": true
        }
      }
    },
    "Producer": {
      "required": [
        "id"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "Id",
          "type": "string",
          "format": "uuid"
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 100
        },
        "icon": {
          "title": "Icon",
          "type": "string",
          "format": "uri",
          "maxLength": 200
        },
        "contact_emails": {
          "type": "array",
          "items": {
            "title": "Contact emails",
            "type": "string",
            "format": "email",
            "maxLength": 254,
            "x-nullable": true
          }
        }
      }
    },
    "UserEmailEvent": {
      "required": [
        "id",
        "audience_event",
        "target_user_id",
        "target_user_email",
        "email_audience_type"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "Id",
          "description": "A unique id assigned to this user email message by SendGrid",
          "type": "string",
          "maxLength": 500,
          "minLength": 1
        },
        "email": {
          "title": "Email",
          "type": "integer",
          "x-nullable": true
        },
        "audience_event": {
          "title": "Audience event",
          "type": "string",
          "format": "uuid"
        },
        "created_at": {
          "title": "Created at",
          "description": "When this user event was created; not when it occurred in the audience's system.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "target_user_id": {
          "title": "Target user id",
          "description": "Identity Service User ID or the user email address if resolved from an audience event with an email target audience.",
          "type": "string",
          "maxLength": 8191,
          "minLength": 1
        },
        "target_user_org_id": {
          "title": "Target user org id",
          "description": "The identity org ID of the user the event is for.",
          "type": "string",
          "maxLength": 45,
          "x-nullable": true
        },
        "target_user_email": {
          "title": "Target user email",
          "type": "string",
          "maxLength": 8191,
          "minLength": 1
        },
        "processed_at": {
          "title": "Processed at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "user_pref_do_not_deliver": {
          "title": "User pref do not deliver",
          "description": "Whether this event was not delivered to the user based on their notification preferences.",
          "type": "boolean",
          "x-nullable": true
        },
        "email_audience_type": {
          "title": "Email audience type",
          "type": "string",
          "minLength": 1
        },
        "template_vars": {
          "title": "Template vars",
          "type": "string",
          "readOnly": true
        },
        "body": {
          "title": "Body",
          "type": "string",
          "readOnly": true
        },
        "agg_body": {
          "title": "Agg body",
          "type": "string",
          "readOnly": true
        },
        "sub": {
          "title": "Sub",
          "type": "string",
          "readOnly": true
        },
        "agg_sub": {
          "title": "Agg sub",
          "type": "string",
          "readOnly": true
        },
        "producer": {
          "title": "Producer",
          "type": "string",
          "readOnly": true
        },
        "status": {
          "title": "Status",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "delivered": {
          "title": "Delivered",
          "type": "boolean",
          "readOnly": true
        },
        "processed": {
          "title": "Processed",
          "type": "boolean",
          "readOnly": true
        },
        "open_count": {
          "title": "Open count",
          "type": "integer",
          "readOnly": true
        },
        "click_count": {
          "title": "Click count",
          "type": "integer",
          "readOnly": true
        },
        "reference_id": {
          "title": "Reference id",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "delivery_rule": {
          "title": "Delivery rule",
          "type": "string",
          "format": "uuid",
          "x-nullable": true
        },
        "version": {
          "title": "Version",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "UserWebEvent": {
      "required": [
        "id",
        "audience_event",
        "target_user_id"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "Id",
          "type": "string",
          "format": "uuid"
        },
        "audience_event": {
          "title": "Audience event",
          "type": "string",
          "format": "uuid"
        },
        "created_at": {
          "title": "Created at",
          "description": "When this user event was created; not when it occurred in the audience's system.",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "target_user_id": {
          "title": "Target user id",
          "description": "The identity user ID of the user the event is for.",
          "type": "string",
          "maxLength": 45,
          "minLength": 1
        },
        "target_user_org_id": {
          "title": "Target user org id",
          "description": "The identity org ID of the user the event is for.",
          "type": "string",
          "maxLength": 45,
          "x-nullable": true
        },
        "seen_at": {
          "title": "Seen at",
          "description": "When the user first saw this event.",
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "interacted_at": {
          "title": "Interacted at",
          "description": "When the user first interacted with this event.",
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "producer_icon": {
          "title": "Producer icon",
          "type": "string",
          "readOnly": true
        },
        "link": {
          "title": "Link",
          "type": "string",
          "readOnly": true
        },
        "agg_link": {
          "title": "Agg link",
          "type": "string",
          "readOnly": true
        },
        "body": {
          "title": "Body",
          "type": "string",
          "readOnly": true
        },
        "agg_body": {
          "title": "Agg body",
          "type": "string",
          "readOnly": true
        },
        "user_pref_do_not_deliver": {
          "title": "User pref do not deliver",
          "description": "Whether this event was not delivered to the user based on their notification preferences.",
          "type": "boolean",
          "x-nullable": true
        },
        "show": {
          "title": "Show",
          "description": "Whether to hide unagged events that will generate an agg event",
          "type": "boolean",
          "x-nullable": true
        }
      }
    },
    "WebTemplate": {
      "required": [
        "name",
        "body",
        "agg_body",
        "event_type"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "_id": {
          "title": "id",
          "description": "UUID for the web template that can be set by the producer and used in all environments",
          "type": "string",
          "format": "uuid",
          "x-nullable": true
        },
        "created_at": {
          "title": "Created at",
          "description": "When this email template was created",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "description": "This field represents the Template in Email Service and when the producer creates audience events.",
          "type": "string",
          "maxLength": 500,
          "minLength": 1
        },
        "version": {
          "title": "Version",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648
        },
        "body": {
          "title": "Body",
          "type": "string",
          "maxLength": 1000,
          "minLength": 1
        },
        "agg_body": {
          "title": "Agg body",
          "type": "string",
          "maxLength": 1000,
          "minLength": 1
        },
        "link": {
          "title": "Link",
          "type": "string",
          "maxLength": 10000
        },
        "agg_link": {
          "title": "Agg link",
          "description": "Link where a user will be sent for details about aggregated web events",
          "type": "string",
          "maxLength": 10000,
          "x-nullable": true
        },
        "event_type": {
          "title": "Event type",
          "type": "integer"
        }
      }
    },
    "AvailablePreferences": {
      "type": "object",
      "properties": {
        "application_name": {
          "title": "Application name",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "application_id": {
          "title": "Application id",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        }
      }
    },
    "EmailGroupUnsubscribe": {
      "required": [
        "email_address"
      ],
      "type": "object",
      "properties": {
        "email_address": {
          "title": "Email address",
          "type": "string",
          "format": "email",
          "minLength": 1
        }
      }
    },
    "NotificationPreference": {
      "type": "object",
      "properties": {
        "application_id": {
          "title": "Application id",
          "description": "ID of Application that this preference is for",
          "type": "string",
          "maxLength": 50
        },
        "org_id": {
          "title": "Org id",
          "description": "identity organization id of this user",
          "type": "string",
          "maxLength": 50
        },
        "pref_email": {
          "title": "Pref email",
          "description": "Whether the user wants to receive emails",
          "type": "boolean"
        }
      }
    },
    "UserDeliveryPreferenceInput": {
      "required": [
        "org_id",
        "user_ids",
        "tags"
      ],
      "type": "object",
      "properties": {
        "org_id": {
          "title": "Org id",
          "type": "string",
          "minLength": 1
        },
        "user_ids": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "tags": {
          "title": "Tags",
          "type": "string"
        }
      }
    },
    "UserTagAssociationReadOnly": {
      "required": [
        "user"
      ],
      "type": "object",
      "properties": {
        "tags": {
          "title": "Tags",
          "type": "string",
          "readOnly": true
        },
        "user": {
          "title": "User",
          "description": "Either an email address or Identity user id",
          "type": "string",
          "maxLength": 1024,
          "minLength": 1
        },
        "org_id": {
          "title": "Org id",
          "description": "Identity organization id of this user",
          "type": "string",
          "maxLength": 50
        }
      }
    },
    "UserOrg": {
      "required": [
        "user",
        "org_id"
      ],
      "type": "object",
      "properties": {
        "user": {
          "title": "User",
          "type": "string",
          "maxLength": 1024,
          "minLength": 1
        },
        "org_id": {
          "title": "Org id",
          "type": "string",
          "maxLength": 50
        }
      }
    },
    "MultipleUsersTagAssociation": {
      "required": [
        "tags",
        "users"
      ],
      "type": "object",
      "properties": {
        "tags": {
          "title": "Tags",
          "type": "string"
        },
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserOrg"
          }
        }
      }
    },
    "Group": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "title": "Name",
          "type": "string",
          "format": "slug",
          "pattern": "^[-a-zA-Z0-9_]+$",
          "maxLength": 1024,
          "minLength": 1
        },
        "optional": {
          "title": "Optional",
          "type": "boolean"
        }
      }
    },
    "Tag": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "name": {
          "title": "Name",
          "type": "string",
          "format": "slug",
          "pattern": "^[-a-zA-Z0-9_]+$",
          "maxLength": 1024,
          "minLength": 1
        },
        "group": {
          "title": "Group",
          "type": "string",
          "format": "slug",
          "pattern": "^[-a-zA-Z0-9_]+$",
          "readOnly": true
        }
      }
    },
    "AudienceEventV2ReadOnly": {
      "required": [
        "id",
        "event_type"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "Id",
          "type": "string",
          "format": "uuid"
        },
        "event_type": {
          "title": "Event type",
          "type": "integer"
        },
        "email_template": {
          "title": "Email template",
          "type": "integer",
          "x-nullable": true
        },
        "email_template_vars": {
          "title": "Email template vars",
          "type": "object",
          "x-nullable": true
        },
        "web_template": {
          "title": "Web template",
          "type": "integer",
          "x-nullable": true
        },
        "web_template_vars": {
          "title": "Web template vars",
          "type": "object",
          "x-nullable": true
        },
        "template_vars": {
          "title": "Template vars",
          "type": "object",
          "x-nullable": true
        },
        "aggregated": {
          "title": "Aggregated",
          "description": "Whether or not this audience event should be aggregated",
          "type": "boolean"
        },
        "scheduled_process_time": {
          "title": "Scheduled process time",
          "description": "The time when the AE should be processed according to the aggregation rule associated with its event type",
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "actual_process_time": {
          "title": "Actual process time",
          "description": "The time when the AE was processed",
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "from_email_address_sender": {
          "title": "From email address sender",
          "type": "integer",
          "x-nullable": true
        },
        "preference_org_id": {
          "title": "Preference org id",
          "description": "If this Audience Event is org-aware, this is the org id that it is associated with. Used for resolving user preferences",
          "type": "string",
          "maxLength": 50,
          "x-nullable": true
        },
        "audiences": {
          "title": "Audiences",
          "description": "A list of JSON objects defining the audiences that will receive this event, e.g. [{'type': 'is-user', 'id': '1234567890'}]",
          "type": "object",
          "x-nullable": true
        },
        "needs_resolution": {
          "title": "Needs resolution",
          "description": "Whether or not this AE needs its audiences to be resolved (automatically set on creation), this does not track if resolutions succeeded",
          "type": "boolean",
          "x-nullable": true
        },
        "allow_dangerously_large_audience_sizes": {
          "title": "Allow dangerously large audience sizes",
          "description": "Determines if producer is allowed to override audience size limit",
          "type": "boolean",
          "x-nullable": true
        },
        "to_audience": {
          "title": "To audience",
          "description": "A list of JSON objects defining the audiences in to that will receive this event, e.g. [{'type': 'is-user', 'id': '1234567890'}]",
          "type": "object",
          "x-nullable": true
        },
        "cc_audience": {
          "title": "Cc audience",
          "description": "A list of JSON objects defining the audiences in cc that will receive this event, e.g. [{'type': 'is-user', 'id': '1234567890'}]",
          "type": "object",
          "x-nullable": true
        },
        "bcc_audience": {
          "title": "Bcc audience",
          "description": "A list of JSON objects defining the audiences in bcc that will receive this event, e.g. [{'type': 'is-user', 'id': '1234567890'}]",
          "type": "object",
          "x-nullable": true
        },
        "stats_processed_at": {
          "title": "Stats processed at",
          "description": "The time when stats were processed for this audience event and its related user events",
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "version": {
          "title": "Version",
          "description": "viewset version the AE was created with",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "x-nullable": true
        },
        "status_message": {
          "title": "Status message",
          "description": "The description of what went wrong when trying to deliver this AudienceEvent",
          "type": "string",
          "maxLength": 8191,
          "x-nullable": true
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "delivery_rule_tags": {
          "title": "Delivery rule tags",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "AudienceEventV2": {
      "required": [
        "id",
        "event_type",
        "delivery_rule_tags"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "Id",
          "type": "string",
          "format": "uuid"
        },
        "event_type": {
          "title": "Event type",
          "type": "integer"
        },
        "email_template": {
          "title": "Email template",
          "type": "integer",
          "x-nullable": true
        },
        "email_template_vars": {
          "title": "Email template vars",
          "type": "object",
          "x-nullable": true
        },
        "web_template": {
          "title": "Web template",
          "type": "integer",
          "x-nullable": true
        },
        "web_template_vars": {
          "title": "Web template vars",
          "type": "object",
          "x-nullable": true
        },
        "template_vars": {
          "title": "Template vars",
          "type": "object",
          "x-nullable": true
        },
        "aggregated": {
          "title": "Aggregated",
          "description": "Whether or not this audience event should be aggregated",
          "type": "boolean"
        },
        "scheduled_process_time": {
          "title": "Scheduled process time",
          "description": "The time when the AE should be processed according to the aggregation rule associated with its event type",
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "actual_process_time": {
          "title": "Actual process time",
          "description": "The time when the AE was processed",
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "from_email_address_sender": {
          "title": "From email address sender",
          "type": "integer",
          "x-nullable": true
        },
        "preference_org_id": {
          "title": "Preference org id",
          "description": "If this Audience Event is org-aware, this is the org id that it is associated with. Used for resolving user preferences",
          "type": "string",
          "maxLength": 50,
          "x-nullable": true
        },
        "audiences": {
          "title": "Audiences",
          "description": "A list of JSON objects defining the audiences that will receive this event, e.g. [{'type': 'is-user', 'id': '1234567890'}]",
          "type": "object",
          "x-nullable": true
        },
        "needs_resolution": {
          "title": "Needs resolution",
          "description": "Whether or not this AE needs its audiences to be resolved (automatically set on creation), this does not track if resolutions succeeded",
          "type": "boolean",
          "x-nullable": true
        },
        "allow_dangerously_large_audience_sizes": {
          "title": "Allow dangerously large audience sizes",
          "description": "Determines if producer is allowed to override audience size limit",
          "type": "boolean",
          "x-nullable": true
        },
        "to_audience": {
          "title": "To audience",
          "description": "A list of JSON objects defining the audiences in to that will receive this event, e.g. [{'type': 'is-user', 'id': '1234567890'}]",
          "type": "object",
          "x-nullable": true
        },
        "cc_audience": {
          "title": "Cc audience",
          "description": "A list of JSON objects defining the audiences in cc that will receive this event, e.g. [{'type': 'is-user', 'id': '1234567890'}]",
          "type": "object",
          "x-nullable": true
        },
        "bcc_audience": {
          "title": "Bcc audience",
          "description": "A list of JSON objects defining the audiences in bcc that will receive this event, e.g. [{'type': 'is-user', 'id': '1234567890'}]",
          "type": "object",
          "x-nullable": true
        },
        "stats_processed_at": {
          "title": "Stats processed at",
          "description": "The time when stats were processed for this audience event and its related user events",
          "type": "string",
          "format": "date-time",
          "x-nullable": true
        },
        "version": {
          "title": "Version",
          "description": "viewset version the AE was created with",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": -2147483648,
          "x-nullable": true
        },
        "status_message": {
          "title": "Status message",
          "description": "The description of what went wrong when trying to deliver this AudienceEvent",
          "type": "string",
          "maxLength": 8191,
          "x-nullable": true
        },
        "created_at": {
          "title": "Created at",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "delivery_rule_tags": {
          "title": "Delivery rule tags",
          "type": "string"
        }
      }
    }
  }
}
